// Classe Produto
public class Produto {
    private String nome;
    private double preco;
    private int quantidade;

    // Construtor
    public Produto(String nome, double preco, int quantidade) {
        this.nome = nome;
        this.preco = preco;
        this.quantidade = quantidade;
    }

    // Métodos getters e setters
    public String getNome() {
        return nome;
    }

    public void setNome(String nome) {
        this.nome = nome;
    }

    public double getPreco() {
        return preco;
    }

    public void setPreco(double preco) {
        if (preco >= 0) {
            this.preco = preco;
        } else {
            System.out.println("O preço não pode ser negativo.");
        }
    }

    public int getQuantidade() {
        return quantidade;
    }

    public void setQuantidade(int quantidade) {
        if (quantidade >= 0) {
            this.quantidade = quantidade;
        } else {
            System.out.println("A quantidade não pode ser negativa.");
        }
    }

    // Método para exibir informações do produto
    public void mostrarInfo() {
        System.out.println("Nome: " + nome);
        System.out.println("Preço: R$" + preco);
        System.out.println("Quantidade em estoque: " + quantidade);
    }

    // Método para vender uma quantidade específica do produto
    public void vender(int quantidadeVendida) {
        if (quantidadeVendida > 0 && quantidadeVendida <= quantidade) {
            quantidade -= quantidadeVendida;
            System.out.println("Venda realizada com sucesso.");
        } else {
            System.out.println("Não há estoque suficiente para realizar esta venda.");
        }
    }
}

// Classe principal para testar o código
public class Main {
    public static void main(String[] args) {
        // Criando um produto
        Produto produto1 = new Produto("Camiseta", 29.99, 50);

        // Exibindo informações do produto
        produto1.mostrarInfo();

        // Venda de algumas unidades do produto
        produto1.vender(10);

        // Exibindo informações atualizadas do produto após a venda
        produto1.mostrarInfo();

        // Tentativa de definir preço e quantidade inválidos (negativos)
        produto1.setPreco(-5.0);
        produto1.setQuantidade(-20);

        // Exibindo informações do produto após tentativas inválidas
        produto1.mostrarInfo();
    }
}
